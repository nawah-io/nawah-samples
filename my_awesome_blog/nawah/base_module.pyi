from bson import ObjectId as ObjectId
from nawah.base_method import BaseMethod as BaseMethod
from nawah.classes import ANALYTIC as ANALYTIC, ATTR as ATTR, ATTR_MOD as ATTR_MOD, BaseModel as BaseModel, CACHE as CACHE, CACHED_QUERY as CACHED_QUERY, DictObj as DictObj, EXTN as EXTN, InvalidAttrTypeArgException as InvalidAttrTypeArgException, InvalidAttrTypeException as InvalidAttrTypeException, NAWAH_DOC as NAWAH_DOC, NAWAH_ENV as NAWAH_ENV, NAWAH_EVENTS as NAWAH_EVENTS, NAWAH_QUERY as NAWAH_QUERY, PERM as PERM, Query as Query
from nawah.config import Config as Config
from nawah.data import Data as Data
from nawah.enums import DELETE_STRATEGY as DELETE_STRATEGY, Event as Event
from nawah.utils import ConvertAttrException as ConvertAttrException, InvalidAttrException as InvalidAttrException, MissingAttrException as MissingAttrException, expand_attr as expand_attr, update_attr_values as update_attr_values, validate_doc as validate_doc
from typing import Any, Dict, List, Tuple, Union

logger: Any

class BaseModule:
    collection: Union[str, bool]
    proxy: str
    attrs: Dict[str, ATTR]
    diff: Union[bool, ATTR_MOD]
    defaults: Dict[str, Any]
    unique_attrs: List[str]
    extns: Dict[str, EXTN]
    privileges: List[str]
    methods: None
    cache: List[CACHE]
    analytics: List[ANALYTIC]
    package_name: str
    module_name: str
    def __init__(self) -> None: ...
    def status(self, status: int, msg: str, *, args: Union[Dict[str, Any], DictObj]=...) -> Dict[str, Any]: ...
    def __getattribute__(self, attr: Any): ...
    async def pre_read(self, skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def on_read(self, results: Dict[str, Any], skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[Dict[str, Any], NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def read(self, skip_events: NAWAH_EVENTS=..., env: NAWAH_ENV=..., query: Union[NAWAH_QUERY, Query]=..., doc: NAWAH_DOC=...) -> DictObj: ...
    async def pre_watch(self, skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def on_watch(self, results: Dict[str, Any], skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[Dict[str, Any], NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def watch(self, skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> DictObj: ...
    async def pre_create(self, skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def on_create(self, results: Dict[str, Any], skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[Dict[str, Any], NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def create(self, skip_events: NAWAH_EVENTS=..., env: NAWAH_ENV=..., query: Union[NAWAH_QUERY, Query]=..., doc: NAWAH_DOC=...) -> DictObj: ...
    async def pre_update(self, skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def on_update(self, results: Dict[str, Any], skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[Dict[str, Any], NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def update(self, skip_events: NAWAH_EVENTS=..., env: NAWAH_ENV=..., query: Union[NAWAH_QUERY, Query]=..., doc: NAWAH_DOC=...) -> DictObj: ...
    async def pre_delete(self, skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def on_delete(self, results: Dict[str, Any], skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[Dict[str, Any], NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def delete(self, skip_events: NAWAH_EVENTS=..., env: NAWAH_ENV=..., query: Union[NAWAH_QUERY, Query]=..., doc: NAWAH_DOC=...) -> DictObj: ...
    def pre_create_file(self, skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    def on_create_file(self, results: Dict[str, Any], skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[Dict[str, Any], NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    def create_file(self, skip_events: NAWAH_EVENTS=..., env: NAWAH_ENV=..., query: Union[NAWAH_QUERY, Query]=..., doc: NAWAH_DOC=...) -> DictObj: ...
    async def pre_delete_file(self, skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def on_delete_file(self, results: Dict[str, Any], skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[Dict[str, Any], NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def delete_file(self, skip_events: NAWAH_EVENTS=..., env: NAWAH_ENV=..., query: Union[NAWAH_QUERY, Query]=..., doc: NAWAH_DOC=...) -> DictObj: ...
    async def pre_retrieve_file(self, skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def on_retrieve_file(self, results: Dict[str, Any], skip_events: NAWAH_EVENTS, env: NAWAH_ENV, query: Union[NAWAH_QUERY, Query], doc: NAWAH_DOC, payload: Dict[str, Any]) -> Tuple[Dict[str, Any], NAWAH_EVENTS, NAWAH_ENV, Union[NAWAH_QUERY, Query], NAWAH_DOC, Dict[str, Any]]: ...
    async def retrieve_file(self, skip_events: NAWAH_EVENTS=..., env: NAWAH_ENV=..., query: Union[NAWAH_QUERY, Query]=..., doc: NAWAH_DOC=...) -> DictObj: ...
    async def update_cache(self, skip_events: NAWAH_EVENTS=..., env: NAWAH_ENV=..., query: Union[NAWAH_QUERY, Query]=..., doc: NAWAH_DOC=...) -> DictObj: ...
